// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: taehoio/idl/services/baemincrypto/v1/baemincrypto.proto

package baemincryptov1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{1}
}

type EncryptUserBaedalHeaderValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputText string `protobuf:"bytes,1,opt,name=input_text,json=inputText,proto3" json:"input_text,omitempty"`
}

func (x *EncryptUserBaedalHeaderValueRequest) Reset() {
	*x = EncryptUserBaedalHeaderValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptUserBaedalHeaderValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptUserBaedalHeaderValueRequest) ProtoMessage() {}

func (x *EncryptUserBaedalHeaderValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptUserBaedalHeaderValueRequest.ProtoReflect.Descriptor instead.
func (*EncryptUserBaedalHeaderValueRequest) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{2}
}

func (x *EncryptUserBaedalHeaderValueRequest) GetInputText() string {
	if x != nil {
		return x.InputText
	}
	return ""
}

type EncryptUserBaedalHeaderValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedText string `protobuf:"bytes,1,opt,name=encrypted_text,json=encryptedText,proto3" json:"encrypted_text,omitempty"`
}

func (x *EncryptUserBaedalHeaderValueResponse) Reset() {
	*x = EncryptUserBaedalHeaderValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptUserBaedalHeaderValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptUserBaedalHeaderValueResponse) ProtoMessage() {}

func (x *EncryptUserBaedalHeaderValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptUserBaedalHeaderValueResponse.ProtoReflect.Descriptor instead.
func (*EncryptUserBaedalHeaderValueResponse) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{3}
}

func (x *EncryptUserBaedalHeaderValueResponse) GetEncryptedText() string {
	if x != nil {
		return x.EncryptedText
	}
	return ""
}

type DecryptUserBaedalHeaderValueRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EncryptedText string `protobuf:"bytes,1,opt,name=encrypted_text,json=encryptedText,proto3" json:"encrypted_text,omitempty"`
}

func (x *DecryptUserBaedalHeaderValueRequest) Reset() {
	*x = DecryptUserBaedalHeaderValueRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptUserBaedalHeaderValueRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptUserBaedalHeaderValueRequest) ProtoMessage() {}

func (x *DecryptUserBaedalHeaderValueRequest) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptUserBaedalHeaderValueRequest.ProtoReflect.Descriptor instead.
func (*DecryptUserBaedalHeaderValueRequest) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{4}
}

func (x *DecryptUserBaedalHeaderValueRequest) GetEncryptedText() string {
	if x != nil {
		return x.EncryptedText
	}
	return ""
}

type DecryptUserBaedalHeaderValueResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecryptedText string `protobuf:"bytes,1,opt,name=decrypted_text,json=decryptedText,proto3" json:"decrypted_text,omitempty"`
}

func (x *DecryptUserBaedalHeaderValueResponse) Reset() {
	*x = DecryptUserBaedalHeaderValueResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptUserBaedalHeaderValueResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptUserBaedalHeaderValueResponse) ProtoMessage() {}

func (x *DecryptUserBaedalHeaderValueResponse) ProtoReflect() protoreflect.Message {
	mi := &file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptUserBaedalHeaderValueResponse.ProtoReflect.Descriptor instead.
func (*DecryptUserBaedalHeaderValueResponse) Descriptor() ([]byte, []int) {
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP(), []int{5}
}

func (x *DecryptUserBaedalHeaderValueResponse) GetDecryptedText() string {
	if x != nil {
		return x.DecryptedText
	}
	return ""
}

var File_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto protoreflect.FileDescriptor

var file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDesc = []byte{
	0x0a, 0x37, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x74, 0x61, 0x65, 0x68, 0x6f,
	0x69, 0x6f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a,
	0x12, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x15, 0x0a, 0x13, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x23, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64, 0x61, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x65, 0x78, 0x74,
	0x22, 0x4d, 0x0a, 0x24, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x65, 0x64, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22,
	0x4c, 0x0a, 0x23, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x65, 0x64, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x22, 0x4d, 0x0a,
	0x24, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64,
	0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x32, 0x9b, 0x05, 0x0a,
	0x13, 0x42, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0xa3, 0x01, 0x0a, 0x0b, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x12, 0x38, 0x2e, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2e, 0x69,
	0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x62, 0x61, 0x65, 0x6d,
	0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39,
	0x2e, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x12, 0x17, 0x2f, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0xed, 0x01, 0x0a, 0x1c, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64, 0x61, 0x6c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x49, 0x2e, 0x74, 0x61,
	0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x65, 0x64, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f,
	0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x62, 0x61,
	0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64, 0x61, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f,
	0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x62, 0x61, 0x65,
	0x64, 0x61, 0x6c, 0x2d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0xed, 0x01, 0x0a, 0x1c, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64, 0x61, 0x6c,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x49, 0x2e, 0x74, 0x61,
	0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61,
	0x65, 0x64, 0x61, 0x6c, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f,
	0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x62, 0x61,
	0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x65, 0x64, 0x61, 0x6c, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x3a, 0x01, 0x2a, 0x22, 0x2b, 0x2f,
	0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x2f,
	0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x2d, 0x75, 0x73, 0x65, 0x72, 0x2d, 0x62, 0x61, 0x65,
	0x64, 0x61, 0x6c, 0x2d, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x42, 0x99, 0x01, 0x0a, 0x2f, 0x63,
	0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69,
	0x6f, 0x2e, 0x69, 0x64, 0x6c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x62,
	0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x11,
	0x42, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x67, 0x6f, 0x2f, 0x74, 0x61, 0x65, 0x68, 0x6f, 0x69, 0x6f, 0x2f, 0x69, 0x64, 0x6c, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x62, 0x61, 0x65, 0x6d, 0x69, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescOnce sync.Once
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescData = file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDesc
)

func file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescGZIP() []byte {
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescOnce.Do(func() {
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescData = protoimpl.X.CompressGZIP(file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescData)
	})
	return file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDescData
}

var file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_goTypes = []interface{}{
	(*HealthCheckRequest)(nil),                   // 0: taehoio.idl.services.baemincrypto.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),                  // 1: taehoio.idl.services.baemincrypto.v1.HealthCheckResponse
	(*EncryptUserBaedalHeaderValueRequest)(nil),  // 2: taehoio.idl.services.baemincrypto.v1.EncryptUserBaedalHeaderValueRequest
	(*EncryptUserBaedalHeaderValueResponse)(nil), // 3: taehoio.idl.services.baemincrypto.v1.EncryptUserBaedalHeaderValueResponse
	(*DecryptUserBaedalHeaderValueRequest)(nil),  // 4: taehoio.idl.services.baemincrypto.v1.DecryptUserBaedalHeaderValueRequest
	(*DecryptUserBaedalHeaderValueResponse)(nil), // 5: taehoio.idl.services.baemincrypto.v1.DecryptUserBaedalHeaderValueResponse
}
var file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_depIdxs = []int32{
	0, // 0: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.HealthCheck:input_type -> taehoio.idl.services.baemincrypto.v1.HealthCheckRequest
	2, // 1: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.EncryptUserBaedalHeaderValue:input_type -> taehoio.idl.services.baemincrypto.v1.EncryptUserBaedalHeaderValueRequest
	4, // 2: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.DecryptUserBaedalHeaderValue:input_type -> taehoio.idl.services.baemincrypto.v1.DecryptUserBaedalHeaderValueRequest
	1, // 3: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.HealthCheck:output_type -> taehoio.idl.services.baemincrypto.v1.HealthCheckResponse
	3, // 4: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.EncryptUserBaedalHeaderValue:output_type -> taehoio.idl.services.baemincrypto.v1.EncryptUserBaedalHeaderValueResponse
	5, // 5: taehoio.idl.services.baemincrypto.v1.BaemincryptoService.DecryptUserBaedalHeaderValue:output_type -> taehoio.idl.services.baemincrypto.v1.DecryptUserBaedalHeaderValueResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_init() }
func file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_init() {
	if File_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthCheckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptUserBaedalHeaderValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptUserBaedalHeaderValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptUserBaedalHeaderValueRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptUserBaedalHeaderValueResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_goTypes,
		DependencyIndexes: file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_depIdxs,
		MessageInfos:      file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_msgTypes,
	}.Build()
	File_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto = out.File
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_rawDesc = nil
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_goTypes = nil
	file_taehoio_idl_services_baemincrypto_v1_baemincrypto_proto_depIdxs = nil
}
